/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.hedvig.customerio

import com.fasterxml.jackson.databind.ObjectMapper
import okhttp3.Credentials
import okhttp3.MediaType.Companion.toMediaType
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.RequestBody.Companion.toRequestBody

const val baseURL = "https://track.customer.io/api"

class Customerio(
    private val siteId: String,
    private val secretApiKey: String,
    private val objectMapper: ObjectMapper,
    private val httpClient: OkHttpClient
) : CustomerioClient {

    override fun updateCustomer(id: String, data: Map<String, Any?>) {

        val json = objectMapper.writeValueAsString(data)

        val requestBody = json.toRequestBody("application/json".toMediaType())

        val request =
            Request.Builder()
                .url("$baseURL/v1/customers/$id")
                .method("PUT", requestBody)
                .addHeader("Authorization", Credentials.basic(siteId, secretApiKey))
                .build()

        httpClient.newCall(request = request).execute().use {
            if (!it.isSuccessful) {
                throw RuntimeException("Could not update customer ${it.body.toString()}")
            }
        }
    }
}
